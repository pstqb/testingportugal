-
  id: 001
  title: "Testing Intelligent Machines"
  descriptions: ["<p>This workshop is both about testing OF <strong>intelligent</strong> machines and about testing WITH <strong>intelligent machines</strong>.</p>
  <p>Have you ever tested an intelligent machine before? In this workshop you will experience through discussion, quizzes and hands-on testing what is new about testing artificial intelligence and robotics. You will experience what is different when you test a physical robot (a Lego Mindstorms robot). And you’ll also test an intelligent agent (= chatbot). </p>
  <p>Also you’ll create your own flightplan towards quality forecasting so you’ll be able to prepare your organization for using AI as a quality assurance tool. And you’ll learn how explainable AI tackles the challenge of knowing what an AI has decided and why.</p> ",
  "<iframe width='560' height='315' src='https://www.youtube.com/embed/v8dlPiHcWsk' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>"]
  subtype: workshop
  speakers: [1]
  language: en
  
-
  id: 002
  title: "Cloud Testing"
  descriptions: [<h5>Introduction</h5>
  <ol>
    <li>Introduction to the course</li>
    <li>Introduction to cloud computing</li>
    <li>Characterisitcs of cloud service</li>
  </ol>

  <h5>Cloud Technology and terminology</h5>
  <ul>
    <li>Virtualization as the backbone for cloud</li>
    <li>…as a Service</li>
    <li>SaaS, PaaS, IaaS</li>
    <li>Costs of cloud infrastrcutre</li>
  </ul>

  <h5>Walk in the clouds - Setting up an instance</h5>
  <ul>
    <li>A commercial cloud hosting service setup</li>
    <li>Choosing OS, resources, instance type etc.</li>
    <li>Installation of applications</li>
    <li>Checking usage and costing</li>
    <li>Common settings</li>
    <li>Setting up clustering</li>
    <li>Setting up Load balancing</li>
    <li>Networking</li>
    <li>Security</li>
    <li>Availability zones</li>
    <li>Elasticity and autoscaling</li>
  </ul>

  <h5>Docker</h5>
  <ul>
    <li>Docker introduction</li>
    <li>Creating and publishing images</li>
    <li>Docker and Kubernets</li>
   
  </ul>

  <h5>Testing cloud apps</h5>
  <ul>
    <li>Data location</li>
    <li>Application Sharing</li>
    <li>Multi-tenancy</li>
    <li>Data ownership, interoperability and portability</li>
    <li>Security</li>
    <li>Compliance</li>
    <li>Disaster recovery</li>
    <li>Expertise availability</li>
    <li>Running cost blindness</li>
    <li>Bandwidth requirement</li>
    <li>Elasticity and autoscaling</li>
    <li>Cloud migration testing</li>
  </ul>

  <h5>Disaster Recovery (DR)</h5>
  <ul>
    <li>Introduction</li>
    <li>Types of setup </li>
    <li>Types of scenarios</li>
    <li>Testing DR</li>
  </ul>]
  subtype: workshop
  speakers: [6]
  language: en
  presentation: 
-
  id: 003
  title: 
  youtubeVideo: https://youtu.be/q5Ob3blPDo4
-
  id: 004
  title: "DevOps - Culture and CI/CD Pipeline design"
  descriptions: ["<h5>2 hours - LEGO4DevOps - Introducing DevOps Culture with a game</h5>",
  "<p>Learning by Doing - Playing - Experiencing</p>",
  "<p>The workshop enables to understand:</p>",
  "<ul>
    <li>the importance of communication between Dev and Ops</li>
    <li>the importance of collective goals rather then individual objectives</li>
    <li>the need for collaboration on solving problems</li>
  </ul>",
  "<br>",
  "<h5>5 hours - <a href='https://www.praqma.com/stories/pipeline-card-game/'>Pipeline</a> - The Game that Delivers!</h5>",
  "<p>Using two card games to design a Continuous Delivery pipelines in line with the Quality needs.</p>
<ul>
<li>- <a href='https://www.praqma.com/stories/pipeline-card-game/'>Pipeline - The Game that Delivers!</a></li>
<li>- <a href='https://www.ministryoftesting.com/dojo/series/testsphere'>TestSphere - Story Challenge</a></li>
<ul>
<p>What testing steps should you include in your Continuous Delivery pipeline? Don’t just string together existing manual processes - use simple, collaborative tools to design something better!</p>
<p>Creating a Continuous Delivery (CD) pipeline is a key development in an organization’s transformation to DevOps. A CD Pipeline covers all the activities needed to transform a code change made by a developer into updated software bringing value to users. Steps in the pipeline include building a new version of the software as well as testing and deploying it. Exactly what kinds of build, test and deployment steps will depend on many factors and there is no ‘one perfect pipeline’ which will suit all situations.</p>
<p>On top of the architecture of the pipeline, it is important to understand how well we covered our product quality related risks, and what testing techniques are needed to have proper, continuous quality assurance.</p>
<p>During the workshop each team will:
<ul>
<li>- discuss the different product quality aspects of their given business scenario, and their importance</li>
<li>- to design a continuous delivery pipeline (using cards), in line with the business expectations</li>
<li>- to understand what else is needed to build a Test Strategy</li>
</ul></p>"]
  subtype: workshop
  speakers: [4] 
  language: en
